buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

ext {
  snippetsDir = file("/build/docs/generated-snippets")
}

apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'

bootRepackage {
  mainClass = 'ru.ratauth.server.RatAuthApplication'
}

dependencies {
  //commons
  compile project(':domain')
  compile 'org.apache.commons:commons-lang3:'

  //web/reactive
  compile 'org.springframework.boot:spring-boot-starter-actuator'
  compile 'org.springframework.boot:spring-boot-starter-web'
  compile 'io.ratpack:ratpack-rx'
  compile 'io.ratpack:ratpack-spring-boot'
  compile 'io.ratpack:ratpack-groovy'
  provided 'javax.servlet:javax.servlet-api'

  //crypto
  compile 'com.nimbusds:nimbus-jose-jwt'

  //docs/test
  testCompile 'org.springframework.restdocs:spring-restdocs-restassured:1.1.0.RELEASE'
  testCompile 'org.springframework.boot:spring-boot-starter-test'
}

task cleanTempDirs(type: Delete) {
  delete fileTree(dir: snippetsDir)
}

test {
  outputs.dir snippetsDir
  dependsOn cleanTempDirs
}

/*_______________docker task__________________*/
task dockerBuild << {
  exec {
    commandLine 'docker', 'build', '--force-rm=true', "--tag='${project.name}'", '.'
  }
}

dockerBuild.dependsOn build

